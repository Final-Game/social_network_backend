# Generated by Django 2.2.16 on 2021-01-01 10:09

from django.db import migrations, transaction


def migrate_account_data_to_ref(apps, schema_editor):
    Match = apps.get_model("chat_management", "Match")
    UserRoom = apps.get_model("chat_management", "UserRoom")
    MatchSetting = apps.get_model("chat_management", "MatchSetting")
    AccountMapper = apps.get_model("chat_management", "AccountMapper")

    matches = Match.objects.all()
    user_rooms = UserRoom.objects.all()
    match_settings = MatchSetting.objects.all()
    with transaction.atomic():
        # migrate match data
        for match in matches:
            if match.sender:
                sender_mapper = AccountMapper.objects.filter(ref=match.sender).first()
                match.sender_mapper = sender_mapper

            if match.receiver:
                receiver_mapper = AccountMapper.objects.filter(
                    ref=match.receiver
                ).first()
                match.receiver_mapper = receiver_mapper

            match.save()
        # migrate user room
        for user_room in user_rooms:
            if user_room.account:
                account_mapper = AccountMapper.objects.filter(
                    ref=user_room.account
                ).first()
                user_room.account_mapper = account_mapper

            user_room.save()

        # migrate match setting data
        for match_setting in match_settings:
            if match_setting.account:
                account_mapper = AccountMapper.objects.filter(
                    ref=match_setting.account
                ).first()
                match_setting.account_mapper = account_mapper

            match_setting.save()


class Migration(migrations.Migration):

    dependencies = [
        ("chat_management", "0019_auto_20210101_1008"),
    ]

    operations = [migrations.RunPython(migrate_account_data_to_ref)]
